# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v
        <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scanned QR Code</title>
    <script>
        function displayRandomString() {
            const strings = ["Scanned Product is to be placed in Transmitters", "Scanned Product is to be placed in Transducers", "Scanned Product is to be placed in CV Spares", "Scanned Product is to be placed in Check Valve"];
            const randomIndex = Math.floor(Math.random() * strings.length);
            const selectedString = strings[randomIndex];
            document.getElementById("randomString").innerText = selectedString;
        }
    </script>
</head>
<body>
    <h1>Product Category by Scanned QR</h1>
    <button onclick="displayRandomString()">Show Category</button>
    <p id="randomString"></p>

</body>
<script type="module">
  // Import the functions you need from the SDKs you need
  import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.3/firebase-app.js";
  import { getAnalytics } from "https://www.gstatic.com/firebasejs/10.12.3/firebase-analytics.js";
  // TODO: Add SDKs for Firebase products that you want to use
  // https://firebase.google.com/docs/web/setup#available-libraries

  // Your web app's Firebase configuration
  // For Firebase JS SDK v7.20.0 and later, measurementId is optional
  const firebaseConfig = {
    apiKey: "AIzaSyDfM5PmnfpIOuHNieexxmBCLJKbF3Gf2Z0",
    authDomain: "qr-code-98119.firebaseapp.com",
    projectId: "qr-code-98119",
    storageBucket: "qr-code-98119.appspot.com",
    messagingSenderId: "1082407799128",
    appId: "1:1082407799128:web:155b6982ac65f242fb7d2d",
    measurementId: "G-2QSBT83SHK"
  };

  // Initialize Firebase
  const app = initializeApp(firebaseConfig);
  const analytics = getAnalytics(app);
</script>
</html>

